CREATE DATABASE HIGH_CLOUDS;

USE HIGH_CLOUDS;

-- Q1. --- unsigned in sal
CREATE TABLE EMPLOYEE(
EMPNO INT UNSIGNED PRIMARY KEY,
ENAME VARCHAR(30),
JOB VARCHAR(30) DEFAULT 'CLERK',
MGR INT UNSIGNED,
HIREDATE DATE,
SAL DECIMAL(7,2) CHECK(SAL>0),
COMM DECIMAL(6,2),
DEPTNO INT UNSIGNED,
FOREIGN KEY(DEPTNO) REFERENCES DEPT(DEPTNO));

-- Q2.
CREATE TABLE DEPT(
DEPTNO INT UNSIGNED PRIMARY KEY,
DNAME VARCHAR(30),
LOC VARCHAR(30));

INSERT INTO DEPT VALUES (10,'OPERATIONS','BOSTON'),
(20,'RESEARCH','DALLAS'),
(30,'SALES','CHICAGO'),
(40,'ACCOUNTING','NEWYORK');

INSERT INTO EMPLOYEE(EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM ,DEPTNO )VALUES 
(7369,'SMITH','CLERK',7902,'1890-12-17',800.00,NULL,20),
(7499,'ALLEN','SALESMAN',7698,'1981-02-20',1600.00,300.00,30),
(7521,'WARD','SALESMAN',7698,'1981-02-22',1250.00,500.00,30),
(7566,'JONES','MANAGER',7839,'1981-04-02',2975.00,NULL,20),
(7654,'MARTIN',	'SALESMAN',7698,'1981-09-28',1250.00,1400.00,30),
(7698,'BLAKE','MANAGER',7839,'1981-05-01',2850.00,NULL,30),
(7782,'CLARK','MANAGER',7839,'1981-06-09',2450.00,NULL,10),
(7788,'SCOTT','ANALYST',7566,'1987-04-19',3000.00,NULL,20),
(7839,'KING','PRESIDENT',NULL,'1981-11-17',5000.00,NULL,10),
(7844,'TURNER','SALESMAN',7698,'1981-09-08',1500.00,0.00,30),
(7876,'ADAMS','CLERK',7788,'1987-05-23',1100.00,NULL,20),
(7900,'JAMES','CLERK',7698,'1981-12-03',950.00,NULL,30),
(7902,'FORD','ANALYST',7566,'1981-12-03',3000.00,NULL,20),
(7934,'MILLER','CLERK',7782,'1982-01-23',1300.00,NULL,10);


SELECT * FROM DEPT;

SELECT * FROM EMPLOYEE;

-- Q3. List the Names and salary of the employee whose salary is greater than 1000

SELECT ENAME,SAL FROM EMPLOYEE
WHERE SAL>1000;



-- Q4. List the details of the employees who have joined before end of September 81.

SELECT * FROM EMPLOYEE
WHERE HIREDATE <'1981-09-30';


-- Q5.List Employee Names having I as second character.

SELECT ENAME FROM EMPLOYEE
WHERE ENAME LIKE '_I%';


-- Q6. List Employee Name, Salary, Allowances (40% of Sal), P.F. (10 % of Sal) and Net Salary. 
-- Also assign the alias name for the columns


SELECT ENAME,SAL,TRUNCATE((SAL*0.4),2) AS ALLOWANCES,TRUNCATE((SAL*0.10),2) AS "P.F.", TRUNCATE((SAL-(SAL*0.4)-(SAL*0.10)),2) AS "NET SALARY"
FROM EMPLOYEE;


-- Q7. List Employee Names with designations who does not report to anybody


SELECT ENAME,JOB FROM EMPLOYEE
WHERE MGR IS NULL;


-- Q8. List Empno, Ename and Salary in the ascending order of salary.

SELECT EMPNO,ENAME,SAL
 FROM EMPLOYEE
ORDER BY SAL ASC;

-- Q9.	How many jobs are available in the Organization 

SELECT JOB,COUNT(JOB) "No of jobs"
 FROM EMPLOYEE
 GROUP BY JOB;


-- Q10.	Determine total payable salary of salesman category

SELECT JOB,SUM(SAL) "TOTAL PAYABLE SALARY" FROM EMPLOYEE
WHERE JOB='SALESMAN';



-- Q11. List average monthly salary for each job within each department  

SELECT DNAME,JOB,TRUNCATE(AVG(SAL),2) AS "AVERAGE SALARY" FROM EMPLOYEE
JOIN DEPT USING(DEPTNO)
GROUP BY DNAME,JOB; 


-- Q12.Use the Same EMP and DEPT table used in the Case study to Display EMPNAME, SALARY and DEPTNAME in which the employee is working.

SELECT DNAME, ENAME,SAL FROM EMPLOYEE 
INNER JOIN DEPT USING (DEPTNO);


-- Q13.Create the Job Grades Table as below

CREATE TABLE JOB_GRADES(
GRADE VARCHAR(10),
LOWEST_SAL INT UNSIGNED,
HIGHEST_SAL INT UNSIGNED);


INSERT INTO JOB_GRADES VALUES ('A',0,999),
('B',1000,1999),
('C',2000,2999),
('D',3000,3999),
('E',4000,5000);


SELECT * FROM JOB_GRADES;

-- Q14.	Display the last name, salary and  Corresponding Grade **********

SELECT ENAME,SAL,
CASE  WHEN SAL BETWEEN 0 AND 999 THEN 'A'
      WHEN SAL BETWEEN 1000 AND 1999 THEN 'B'
      WHEN SAL BETWEEN 2000 AND 2999 THEN 'C'
      WHEN SAL BETWEEN 3000 AND 3999 THEN 'D'
      ELSE 'E'
      END 'GRADE'
FROM EMPLOYEE ;

-- Q15.	Display the Emp name and the Manager name under whom the Employee works in the below format .
-- Emp Report to Mgr.

SELECT CONCAT(ENAME,' Report to ',IFNULL(MGR,'NA')) AS "EMPLOYEE WITH MGR"
FROM EMPLOYEE;


-- Q16.	Display Empname and Total sal where Total Sal (sal + Comm)

SELECT ENAME,(SAL+IFNULL(COMM,0)) AS "TOTAL SAL"
FROM EMPLOYEE;


-- Q17.	Display Empname and Sal whose empno is a odd number

SELECT ENAME,SAL
FROM EMPLOYEE
WHERE EMPNO%2<>0;

-- Q18.	Display Empname , Rank of sal in Organisation , Rank of Sal in their department

SELECT ENAME,RANK() OVER (PARTITION BY DNAME ORDER BY SAL DESC) 'RANK IN DEPT',RANK() OVER(ORDER BY SAL DESC) 'RANK IN ORGANISATION'
FROM EMPLOYEE JOIN DEPT USING(DEPTNO);

-- Q19.	Display Top 3 Empnames based on their Salary

SELECT ENAME FROM EMPLOYEE
ORDER BY SAL DESC
LIMIT 3;

-- Q20. Display Empname who has highest Salary in Each Department 

SELECT DEPTNO,D.DNAME,ENAME,RANK1 FROM 
(SELECT DEPTNO,D.DNAME,ENAME,RANK() OVER(PARTITION  BY DEPTNO ORDER BY SAL DESC ) AS RANK1 FROM EMPLOYEE 
JOIN DEPT D USING(DEPTNO))
WHERE RANK1=1;


-- COMMON TABLE EXPRESSION
WITH MAX AS
(SELECT DNAME,DEPTNO,ENAME,RANK() OVER(PARTITION  BY DEPTNO ORDER BY SAL DESC ) AS RANK1 FROM EMPLOYEE 
JOIN DEPT USING(DEPTNO))SELECT * FROM MAX 
WHERE RANK1=1;







